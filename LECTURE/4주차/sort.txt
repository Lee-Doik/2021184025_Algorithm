Selection sort
	비교 횟수가 적다.
	입력에 민감하지 않은 알고리즘
	항상 일정한 시간 복잡도.
	랜덤한 데이터 기준으로 n^2 정렬 알고리즘 중 가장 빠름.

Insertion sort
	정렬된 부분과 정렬되지 않은 부분을 나눈다
	정렬되지 않은 부분에서 요소를 하나 가져와서 정렬된 부분에 적절하게 삽입한다.
	자료가 비슷하게 정렬되어 있을 때 효율적.
	버블정렬과 다르게 비교만 하고 교체는 필요할때만 함.
	하지만 선택정렬보다는 느림. 교환이 더 많기 때문.

Shell sort 
	삽입정렬을 보완한 알고리즘.
	비교할 자료를 따로 복사해두고 비교함
	서브리스트를 만들어서 빨리 밀어버림
	대입 연산이 최소화됨.(교체 3번 / push 1번)
	실용적임
	퀵정렬,합병정렬에서 입력 크기가 작아지면 순환 호출을 중단하고 삽입 정렬을 사용
	Tim sort 에서는 입력이 64 이하이면 삽입(Insertion)정렬 사용.
	하드웨어 정렬하기 좋음-> 임베디드 시스템에 사용
	
