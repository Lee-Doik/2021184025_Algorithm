-분할정복

	문제상황 -> 부분해로 나누어서 나중에 취합하여 문제 해결.

	부분해를 찾아야함.
	정복하는 방법은 문제마다 다름
	일반적으로 부분 문제들의 해를 취합하여 보다 큰 문제를 해결함.

	문제가 2개로 분할되고, 부분 문제의 크기가 일정하지 않은 크기로 감소.
	-> 퀵 정렬

	부분 문제의 크기가 1, 2개씩 감소하는 알고리즘
	-> 삽입정렬, 피보나치 수의 계산.

	문제가 2개로 분할되나, 나머지 하나는 고려할 필요가 없으며 부분 문제가 1/2 가 되는 알고리즘
	-> 이진탐색

	합병 정렬은 입력이 2개의 부분 문제로 분할되고 부분 문제의 크기가 1/2로 감소하는 분할정복 알고리즘

	합병정렬
	합병정렬
	합병

	의 과정

합병정렬 psuedo 코드

if (p < q){
	k = [(p + q)/2]
	Mergesort(A,p,k)
	Mergesort(A,k+1,q)
	A[p] ~ A[K] 와 A[K+1] ~ A[q]를 합병
}


합병정렬할때 N만큼의 추가 공간이 필요함.

파이썬에서는 NlogN, 다른 언어라면 N개의 배열에 읽고 쓰기 반복.

퀵정렬은 분할정복 알고리즘으로 분류

정복 후 분할하는 과정으로 진행됨.

피봇 정하고 앞뒤만 나눔.

다시 나누어진 두 그룹에서 피봇정하고 분할.

퀵 정렬

	피봇 기준으로 반반 나누어진 부분 문제가 생김
	그 문제를 해결하기 위해 다시 피봇을 정하고 부분문제 생성. 반복함.

	Unstable 한 방법.



